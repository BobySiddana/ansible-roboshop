- name: configuring catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: disabling the default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enabling nodjs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app
  - name: download catalogue code 
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: extract the catalogue code 
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy catalogue.service to system directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: system daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copy mongodb repo
    ansible.builtin.copy:
    src: mongod.repo
    dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check products are loaded or not
    ansible.builtin.command: mongosh --host mongodb.dawsj.space --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output

  - name: print command output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load the products
    ansible.builtin.shell: mongosh --host mongodb.dawsj.space </app/db/master-data.js
    when: catalogue_output.stdout | int < 0    



